@model PseudoCell.Models.ActionChoiceAddEditModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Choice - Choice Name: @Model.ActionChoice.Name</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ActionChoice</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ActionChoice.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ActionChoice.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActionChoice.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActionChoice.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionChoice.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActionChoice.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActionChoice.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionChoice.NextScenarioName, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(x=>x.ActionChoice.NextScenarioId, Model.ScenariosForSelection)
                @*@Html.EditorFor(model => model.ActionChoice.NextScenarioName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                @Html.ValidationMessageFor(model => model.ActionChoice.NextScenarioName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionChoice.ScenarioName, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActionChoice.ScenarioName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ActionChoice.ScenarioName, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("[Back to List]", "Index", new{scenarioId=Model.ActionChoice.ScenarioId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
