--------------------------------------------------------------------------------------------------------------------
**DB Migrations commands**
-in Visual Studio, go to Tools > Nuget Package Manager > Package Manager Console
-Type this command in the console: 
	enable-migrations -ContextTypeName PseudoCell.DataAccess.MyDataContext -MigrationsDirectory: "SchoolDBContextMigrations"
-If successful, you will see folder called "SchoolDBContextMigrations" created.  Then type this command next:
	add-migrations -Configuration PseudoCell.SchoolDBContextMigrations.Configuration firstMigration
-If no errors, type this command next to apply the migrations:
	update-database -Configuration PseudoCell.SchoolDBContextMigrations.Configuration -verbose

**If any error occured during the entire process (red text - yellow is fine), then stop!.  copy and save the error message.
**Read the instructions carefully before executing.  Read and proof-read your commands before hiting enter in the console.
--------------------------------------------------------------------------------------------------------------------
Notes for Saturday:
Note for Monday:11/28/2017

[COMPLETED]Remove parenthese around the select buttons during play mode, and add space between button and display text
[COMPLETED]Change title for grades page
[COMPLETED]spacing between play and grade buttons for game index page
[COMPLETED]Remove the extra paragraph in home page
[COMPLETED]Replace edit button in details page when user is student, into play button
[COMPLETED]When game result comment is too long it pushes table to the right
[COMPLETED]Back action link in account details when user is student needs to be button
[COMPLETED]Remove the unnecessary stuff in the built in account settings page
[COMPLETED]Add config feature for admin to indicate if a scenario displays a comment input or not.
[COMPLETED]Fix delete game
[COMPLETED]Fix delete scenario

[COMPLETED]Change all action links to buttons

[COMPLETED]Admin can manage accounts, edit, delete
[COMPLETED]Add random functionality for scenario
[COMPLETED]Student user can view their game results
[COMPLETED]Admin can view, edit, and delete game results
[COMPLETED]Don't allow user to click Back button on the browser
[COMPLETED]Add Configure Action Links at the Index level, also after creating, re-direct back to index instead of details

[COMPLETED]Allow admin to see game results

[COMPLETED]Allow user to play game
[COMPLETED]End game with functionality to add comment
[COMPLETED]Implement functionality for Action Choice to point to the next scenario

[COMPLETED]Inside Edit Game web Page, add a button call add scenario.
[COMPLETED]Add a new controller insde controllers folder called ScenarioController
[COMPLETED]Inside ScenarioController add a method called Add, parameter is gameId. Link the add Scenario button to this method(use actionlink)

[COMPLETED]Transfer the image and the home page changes from InfiniteCell to PseudoCell
[COMPLETED]Change controller method to generate a User and insert into User table
[COMPLETED]Display admin/student at the top where it says hello when logged in

[COMPLETED]Game page - display a list of games, user can select a game to play. 
				4b. If user is manager, user can see edit button and add game button.
					4i. When editting, user can see a list of scenarios that belong to the current game.
					4ii. When adding or edit, user can click add scenario button.
		

